CString input_string, ms, t;
	CString alphabet_string, in_order_string;
	int word_counter = 0;
	char alphabet[5];
	char words[90][10];
	char word_buffer[1][10];
	char letter_arr[33];
	bool fg = false;



for (int i = 0; i < input_string.GetLength(); i++)
			{
				words[word_counter][i] = input_string.GetAt(i);
			}

	if (word_counter>0)
	{ 
			for (int x = 0; x < word_counter;x++ )
			{
				for (int i = 0; i < word_counter; i++)
				{
					for (int k = 0; (k < 10); k++)
					{
						if ((words[i + 1][k] == ' ') || (words[i][k] == ' '))break;
						if ((words[i + 1][k] == words[i][k]))k++;
						if ((words[i + 1][k] < words[i][k]) && (fg == false) && (words[i + 1][k] != words[i][k])) {  //

							for (int c = 0; c < k; c++)
							{
								if ((words[i + 1][c] > words[i][c]))fg=true;
							}

							if (fg==false)
							{
								for (int d = 0; d < 10; d++)
								{
									word_buffer[0][d] = ' ';
									word_buffer[0][d] = words[i][d];
								}

								for (int s = 0; s < 10; s++)
								{
									words[i][s] = ' ';
									words[i][s] = words[i + 1][s];
								}

								for (int j = 0; j < 10; j++)
								{
									words[i + 1][j] = ' ';
									words[i + 1][j] = word_buffer[0][j];
								}
								fg = true;
							}
						}
					}
					fg = false;	
				}
			}
			///////
	}
		
		word_counter++;
	}
